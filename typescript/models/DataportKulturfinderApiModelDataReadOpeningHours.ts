/* tslint:disable */
/* eslint-disable */
/**
 * Kulturfinder Bremen API
 * An ASP.NET Core Web API for managing the Data of Institutions
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DataportKulturfinderApiModelDataReadOpenedTimes } from './DataportKulturfinderApiModelDataReadOpenedTimes';
import {
    DataportKulturfinderApiModelDataReadOpenedTimesFromJSON,
    DataportKulturfinderApiModelDataReadOpenedTimesFromJSONTyped,
    DataportKulturfinderApiModelDataReadOpenedTimesToJSON,
    DataportKulturfinderApiModelDataReadOpenedTimesToJSONTyped,
} from './DataportKulturfinderApiModelDataReadOpenedTimes';

/**
 * 
 * @export
 * @interface DataportKulturfinderApiModelDataReadOpeningHours
 */
export interface DataportKulturfinderApiModelDataReadOpeningHours {
    /**
     * 
     * @type {number}
     * @memberof DataportKulturfinderApiModelDataReadOpeningHours
     */
    id?: number;
    /**
     * 
     * @type {Date}
     * @memberof DataportKulturfinderApiModelDataReadOpeningHours
     */
    activeStartDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof DataportKulturfinderApiModelDataReadOpeningHours
     */
    activeEndDate?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof DataportKulturfinderApiModelDataReadOpeningHours
     */
    priority?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DataportKulturfinderApiModelDataReadOpeningHours
     */
    visible?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DataportKulturfinderApiModelDataReadOpeningHours
     */
    isEveryYear?: boolean;
    /**
     * 
     * @type {Array<DataportKulturfinderApiModelDataReadOpenedTimes>}
     * @memberof DataportKulturfinderApiModelDataReadOpeningHours
     */
    openedTimes?: Array<DataportKulturfinderApiModelDataReadOpenedTimes> | null;
}

/**
 * Check if a given object implements the DataportKulturfinderApiModelDataReadOpeningHours interface.
 */
export function instanceOfDataportKulturfinderApiModelDataReadOpeningHours(value: object): value is DataportKulturfinderApiModelDataReadOpeningHours {
    return true;
}

export function DataportKulturfinderApiModelDataReadOpeningHoursFromJSON(json: any): DataportKulturfinderApiModelDataReadOpeningHours {
    return DataportKulturfinderApiModelDataReadOpeningHoursFromJSONTyped(json, false);
}

export function DataportKulturfinderApiModelDataReadOpeningHoursFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataportKulturfinderApiModelDataReadOpeningHours {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'activeStartDate': json['activeStartDate'] == null ? undefined : (new Date(json['activeStartDate'])),
        'activeEndDate': json['activeEndDate'] == null ? undefined : (new Date(json['activeEndDate'])),
        'priority': json['priority'] == null ? undefined : json['priority'],
        'visible': json['visible'] == null ? undefined : json['visible'],
        'isEveryYear': json['isEveryYear'] == null ? undefined : json['isEveryYear'],
        'openedTimes': json['openedTimes'] == null ? undefined : ((json['openedTimes'] as Array<any>).map(DataportKulturfinderApiModelDataReadOpenedTimesFromJSON)),
    };
}

export function DataportKulturfinderApiModelDataReadOpeningHoursToJSON(json: any): DataportKulturfinderApiModelDataReadOpeningHours {
    return DataportKulturfinderApiModelDataReadOpeningHoursToJSONTyped(json, false);
}

export function DataportKulturfinderApiModelDataReadOpeningHoursToJSONTyped(value?: DataportKulturfinderApiModelDataReadOpeningHours | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'activeStartDate': value['activeStartDate'] == null ? undefined : ((value['activeStartDate']).toISOString().substring(0,10)),
        'activeEndDate': value['activeEndDate'] == null ? undefined : ((value['activeEndDate']).toISOString().substring(0,10)),
        'priority': value['priority'],
        'visible': value['visible'],
        'isEveryYear': value['isEveryYear'],
        'openedTimes': value['openedTimes'] == null ? undefined : ((value['openedTimes'] as Array<any>).map(DataportKulturfinderApiModelDataReadOpenedTimesToJSON)),
    };
}

