/* tslint:disable */
/* eslint-disable */
/**
 * Kulturfinder Bremen API
 * An ASP.NET Core Web API for managing the Data of Institutions
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DataportKulturfinderApiModelDataReadCategory
 */
export interface DataportKulturfinderApiModelDataReadCategory {
    /**
     * 
     * @type {number}
     * @memberof DataportKulturfinderApiModelDataReadCategory
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof DataportKulturfinderApiModelDataReadCategory
     */
    name?: string | null;
}

/**
 * Check if a given object implements the DataportKulturfinderApiModelDataReadCategory interface.
 */
export function instanceOfDataportKulturfinderApiModelDataReadCategory(value: object): value is DataportKulturfinderApiModelDataReadCategory {
    return true;
}

export function DataportKulturfinderApiModelDataReadCategoryFromJSON(json: any): DataportKulturfinderApiModelDataReadCategory {
    return DataportKulturfinderApiModelDataReadCategoryFromJSONTyped(json, false);
}

export function DataportKulturfinderApiModelDataReadCategoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataportKulturfinderApiModelDataReadCategory {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
    };
}

export function DataportKulturfinderApiModelDataReadCategoryToJSON(json: any): DataportKulturfinderApiModelDataReadCategory {
    return DataportKulturfinderApiModelDataReadCategoryToJSONTyped(json, false);
}

export function DataportKulturfinderApiModelDataReadCategoryToJSONTyped(value?: DataportKulturfinderApiModelDataReadCategory | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
    };
}

