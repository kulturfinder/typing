/* tslint:disable */
/* eslint-disable */
/**
 * Kulturfinder Bremen API
 * An ASP.NET Core Web API for managing the Data of Institutions
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DataportKulturfinderApiModelDataReadMedia
 */
export interface DataportKulturfinderApiModelDataReadMedia {
    /**
     * 
     * @type {number}
     * @memberof DataportKulturfinderApiModelDataReadMedia
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof DataportKulturfinderApiModelDataReadMedia
     */
    mediaType?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DataportKulturfinderApiModelDataReadMedia
     */
    alternateText?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DataportKulturfinderApiModelDataReadMedia
     */
    filename?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DataportKulturfinderApiModelDataReadMedia
     */
    copyright?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DataportKulturfinderApiModelDataReadMedia
     */
    artist?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DataportKulturfinderApiModelDataReadMedia
     */
    url?: string | null;
    /**
     * 
     * @type {number}
     * @memberof DataportKulturfinderApiModelDataReadMedia
     */
    order?: number;
}

/**
 * Check if a given object implements the DataportKulturfinderApiModelDataReadMedia interface.
 */
export function instanceOfDataportKulturfinderApiModelDataReadMedia(value: object): value is DataportKulturfinderApiModelDataReadMedia {
    return true;
}

export function DataportKulturfinderApiModelDataReadMediaFromJSON(json: any): DataportKulturfinderApiModelDataReadMedia {
    return DataportKulturfinderApiModelDataReadMediaFromJSONTyped(json, false);
}

export function DataportKulturfinderApiModelDataReadMediaFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataportKulturfinderApiModelDataReadMedia {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'mediaType': json['mediaType'] == null ? undefined : json['mediaType'],
        'alternateText': json['alternateText'] == null ? undefined : json['alternateText'],
        'filename': json['filename'] == null ? undefined : json['filename'],
        'copyright': json['copyright'] == null ? undefined : json['copyright'],
        'artist': json['artist'] == null ? undefined : json['artist'],
        'url': json['url'] == null ? undefined : json['url'],
        'order': json['order'] == null ? undefined : json['order'],
    };
}

export function DataportKulturfinderApiModelDataReadMediaToJSON(json: any): DataportKulturfinderApiModelDataReadMedia {
    return DataportKulturfinderApiModelDataReadMediaToJSONTyped(json, false);
}

export function DataportKulturfinderApiModelDataReadMediaToJSONTyped(value?: DataportKulturfinderApiModelDataReadMedia | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'mediaType': value['mediaType'],
        'alternateText': value['alternateText'],
        'filename': value['filename'],
        'copyright': value['copyright'],
        'artist': value['artist'],
        'url': value['url'],
        'order': value['order'],
    };
}

