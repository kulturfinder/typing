/* tslint:disable */
/* eslint-disable */
/**
 * Kulturfinder Bremen API
 * An ASP.NET Core Web API for managing the Data of Institutions
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DataportKulturfinderApiModelDataWriteTranslation } from './DataportKulturfinderApiModelDataWriteTranslation';
import {
    DataportKulturfinderApiModelDataWriteTranslationFromJSON,
    DataportKulturfinderApiModelDataWriteTranslationFromJSONTyped,
    DataportKulturfinderApiModelDataWriteTranslationToJSON,
    DataportKulturfinderApiModelDataWriteTranslationToJSONTyped,
} from './DataportKulturfinderApiModelDataWriteTranslation';

/**
 * 
 * @export
 * @interface DataportKulturfinderApiModelDataWriteRegionMultiLingual
 */
export interface DataportKulturfinderApiModelDataWriteRegionMultiLingual {
    /**
     * 
     * @type {number}
     * @memberof DataportKulturfinderApiModelDataWriteRegionMultiLingual
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof DataportKulturfinderApiModelDataWriteRegionMultiLingual
     */
    state?: string | null;
    /**
     * 
     * @type {Array<DataportKulturfinderApiModelDataWriteTranslation>}
     * @memberof DataportKulturfinderApiModelDataWriteRegionMultiLingual
     */
    name?: Array<DataportKulturfinderApiModelDataWriteTranslation> | null;
}

/**
 * Check if a given object implements the DataportKulturfinderApiModelDataWriteRegionMultiLingual interface.
 */
export function instanceOfDataportKulturfinderApiModelDataWriteRegionMultiLingual(value: object): value is DataportKulturfinderApiModelDataWriteRegionMultiLingual {
    return true;
}

export function DataportKulturfinderApiModelDataWriteRegionMultiLingualFromJSON(json: any): DataportKulturfinderApiModelDataWriteRegionMultiLingual {
    return DataportKulturfinderApiModelDataWriteRegionMultiLingualFromJSONTyped(json, false);
}

export function DataportKulturfinderApiModelDataWriteRegionMultiLingualFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataportKulturfinderApiModelDataWriteRegionMultiLingual {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'state': json['state'] == null ? undefined : json['state'],
        'name': json['name'] == null ? undefined : ((json['name'] as Array<any>).map(DataportKulturfinderApiModelDataWriteTranslationFromJSON)),
    };
}

export function DataportKulturfinderApiModelDataWriteRegionMultiLingualToJSON(json: any): DataportKulturfinderApiModelDataWriteRegionMultiLingual {
    return DataportKulturfinderApiModelDataWriteRegionMultiLingualToJSONTyped(json, false);
}

export function DataportKulturfinderApiModelDataWriteRegionMultiLingualToJSONTyped(value?: DataportKulturfinderApiModelDataWriteRegionMultiLingual | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'state': value['state'],
        'name': value['name'] == null ? undefined : ((value['name'] as Array<any>).map(DataportKulturfinderApiModelDataWriteTranslationToJSON)),
    };
}

