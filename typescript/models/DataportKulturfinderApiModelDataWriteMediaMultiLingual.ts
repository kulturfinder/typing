/* tslint:disable */
/* eslint-disable */
/**
 * Kulturfinder Bremen API
 * An ASP.NET Core Web API for managing the Data of Institutions
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DataportKulturfinderApiModelDataWriteTranslation } from './DataportKulturfinderApiModelDataWriteTranslation';
import {
    DataportKulturfinderApiModelDataWriteTranslationFromJSON,
    DataportKulturfinderApiModelDataWriteTranslationFromJSONTyped,
    DataportKulturfinderApiModelDataWriteTranslationToJSON,
    DataportKulturfinderApiModelDataWriteTranslationToJSONTyped,
} from './DataportKulturfinderApiModelDataWriteTranslation';
import type { DataportKulturfinderApiModelEnumsMediaType } from './DataportKulturfinderApiModelEnumsMediaType';
import {
    DataportKulturfinderApiModelEnumsMediaTypeFromJSON,
    DataportKulturfinderApiModelEnumsMediaTypeFromJSONTyped,
    DataportKulturfinderApiModelEnumsMediaTypeToJSON,
    DataportKulturfinderApiModelEnumsMediaTypeToJSONTyped,
} from './DataportKulturfinderApiModelEnumsMediaType';
import type { DataportKulturfinderApiModelDataWriteLivingImage } from './DataportKulturfinderApiModelDataWriteLivingImage';
import {
    DataportKulturfinderApiModelDataWriteLivingImageFromJSON,
    DataportKulturfinderApiModelDataWriteLivingImageFromJSONTyped,
    DataportKulturfinderApiModelDataWriteLivingImageToJSON,
    DataportKulturfinderApiModelDataWriteLivingImageToJSONTyped,
} from './DataportKulturfinderApiModelDataWriteLivingImage';

/**
 * 
 * @export
 * @interface DataportKulturfinderApiModelDataWriteMediaMultiLingual
 */
export interface DataportKulturfinderApiModelDataWriteMediaMultiLingual {
    /**
     * 
     * @type {number}
     * @memberof DataportKulturfinderApiModelDataWriteMediaMultiLingual
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof DataportKulturfinderApiModelDataWriteMediaMultiLingual
     */
    instituteId?: number;
    /**
     * 
     * @type {Array<DataportKulturfinderApiModelDataWriteTranslation>}
     * @memberof DataportKulturfinderApiModelDataWriteMediaMultiLingual
     */
    alternateText?: Array<DataportKulturfinderApiModelDataWriteTranslation> | null;
    /**
     * 
     * @type {string}
     * @memberof DataportKulturfinderApiModelDataWriteMediaMultiLingual
     */
    copyright?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DataportKulturfinderApiModelDataWriteMediaMultiLingual
     */
    artist?: string | null;
    /**
     * 
     * @type {number}
     * @memberof DataportKulturfinderApiModelDataWriteMediaMultiLingual
     */
    order?: number;
    /**
     * 
     * @type {DataportKulturfinderApiModelEnumsMediaType}
     * @memberof DataportKulturfinderApiModelDataWriteMediaMultiLingual
     */
    mediaType?: DataportKulturfinderApiModelEnumsMediaType;
    /**
     * 
     * @type {string}
     * @memberof DataportKulturfinderApiModelDataWriteMediaMultiLingual
     */
    url?: string | null;
    /**
     * 
     * @type {DataportKulturfinderApiModelDataWriteLivingImage}
     * @memberof DataportKulturfinderApiModelDataWriteMediaMultiLingual
     */
    livingImage?: DataportKulturfinderApiModelDataWriteLivingImage;
    /**
     * 
     * @type {Blob}
     * @memberof DataportKulturfinderApiModelDataWriteMediaMultiLingual
     */
    data?: Blob | null;
}



/**
 * Check if a given object implements the DataportKulturfinderApiModelDataWriteMediaMultiLingual interface.
 */
export function instanceOfDataportKulturfinderApiModelDataWriteMediaMultiLingual(value: object): value is DataportKulturfinderApiModelDataWriteMediaMultiLingual {
    return true;
}

export function DataportKulturfinderApiModelDataWriteMediaMultiLingualFromJSON(json: any): DataportKulturfinderApiModelDataWriteMediaMultiLingual {
    return DataportKulturfinderApiModelDataWriteMediaMultiLingualFromJSONTyped(json, false);
}

export function DataportKulturfinderApiModelDataWriteMediaMultiLingualFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataportKulturfinderApiModelDataWriteMediaMultiLingual {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'instituteId': json['instituteId'] == null ? undefined : json['instituteId'],
        'alternateText': json['alternateText'] == null ? undefined : ((json['alternateText'] as Array<any>).map(DataportKulturfinderApiModelDataWriteTranslationFromJSON)),
        'copyright': json['copyright'] == null ? undefined : json['copyright'],
        'artist': json['artist'] == null ? undefined : json['artist'],
        'order': json['order'] == null ? undefined : json['order'],
        'mediaType': json['mediaType'] == null ? undefined : DataportKulturfinderApiModelEnumsMediaTypeFromJSON(json['mediaType']),
        'url': json['url'] == null ? undefined : json['url'],
        'livingImage': json['livingImage'] == null ? undefined : DataportKulturfinderApiModelDataWriteLivingImageFromJSON(json['livingImage']),
        'data': json['data'] == null ? undefined : json['data'],
    };
}

export function DataportKulturfinderApiModelDataWriteMediaMultiLingualToJSON(json: any): DataportKulturfinderApiModelDataWriteMediaMultiLingual {
    return DataportKulturfinderApiModelDataWriteMediaMultiLingualToJSONTyped(json, false);
}

export function DataportKulturfinderApiModelDataWriteMediaMultiLingualToJSONTyped(value?: DataportKulturfinderApiModelDataWriteMediaMultiLingual | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'instituteId': value['instituteId'],
        'alternateText': value['alternateText'] == null ? undefined : ((value['alternateText'] as Array<any>).map(DataportKulturfinderApiModelDataWriteTranslationToJSON)),
        'copyright': value['copyright'],
        'artist': value['artist'],
        'order': value['order'],
        'mediaType': DataportKulturfinderApiModelEnumsMediaTypeToJSON(value['mediaType']),
        'url': value['url'],
        'livingImage': DataportKulturfinderApiModelDataWriteLivingImageToJSON(value['livingImage']),
        'data': value['data'],
    };
}

